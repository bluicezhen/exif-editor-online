@use './variables' as vars;

// Flexbox helpers
@mixin flex($direction: row, $justify: flex-start, $align: center, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  @if $gap != 0 {
    gap: $gap;
  }
}

// Card styles
@mixin card($padding: vars.$spacing-base, $radius: vars.$border-radius, $bg: var(--bg-primary)) {
  background-color: $bg;
  border-radius: $radius;
  padding: $padding;
  box-shadow: vars.$shadow-sm;
}

// Fixed size container
@mixin fixed-size($width, $height: $width) {
  width: $width;
  height: $height;
}

// Media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == md {
    @media (min-width: vars.$breakpoint-md) {
      @content;
    }
  }
  @else if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) {
      @content;
    }
  }
}

// Grid layout
@mixin grid($columns: 1, $gap: vars.$spacing-base) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Truncate text
@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Transition
@mixin transition($properties: all, $duration: 0.2s, $timing: ease) {
  transition-property: $properties;
  transition-duration: $duration;
  transition-timing-function: $timing;
} 